#SQL(1)(노말)_카테고리별도서판매량구하기
#풀이시간 : 5분
#테이블(B) BOOK - 판매중인도서정보 : BOOK_ID, CATEGORY, AUTHOR_ID, PRICE, PUBLISHED_DATE
#테이블(A) BOOK_SALES - 판매정보 : BOOK_ID, SALES_DATE, SALES(판매량)

SELECT B.CATEGORY, SUM(A.SALES) AS TOTAL_SALES
FROM BOOK_SALES AS A LEFT JOIN BOOK AS B
ON A.BOOK_ID=B.BOOK_ID
WHERE DATE_FORMAT(A.SALES_DATE, "%Y-%m")='2022-01'
GROUP BY B.CATEGORY
ORDER BY B.CATEGORY ASC;


#SQL(1)(CH)_오프/온라인 판매정보통합하기
#풀이시간 : 15분
#맨날 LEFT JOIN만 하다가 UNION 나와서,,, 쫌 당황~
#테이블() ONLINE_SALE - 온라인상품판매정보 : ONLINE_SALE_ID, USER_ID, PRODUCT_ID
#                                        SALES_AMOUNT, SALES_DATE(판매일)
#테이블() OFFLINE_SALE - 오프라인상품판매정보 : OFFLINE_SALE_ID, PRODUCT_ID, SALES_AMOUNT
#                                           SALES_DATE

#오프라인에서 판거랑,, 온라인에서 판거랑,, 판매자체가 다름,, 
#특정한 날, 특정한 제품 >> 온라인+오프라인

SELECT DATE_FORMAT(A.SALES_DATE, '%Y-%m-%d') AS SALES_DATE, A.PRODUCT_ID, A.USER_ID, A.SALES_AMOUNT
FROM (SELECT SALES_DATE, PRODUCT_ID, USER_ID, SALES_AMOUNT FROM ONLINE_SALE
      UNION
      SELECT SALES_DATE, PRODUCT_ID, NULL, SALES_AMOUNT FROM OFFLINE_SALE) AS A
WHERE DATE_FORMAT(A.SALES_DATE, '%Y-%m')='2022-03'
ORDER BY A.SALES_DATE ASC, A.PRODUCT_ID ASC, A.USER_ID ASC;